{"version":3,"file":"static/js/155.383a820d.chunk.js","mappings":"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","sources":["webpack://website/./src/components/Markdown.module.less?7236","components/Markdown.tsx","pages/editable-input-hsla/index.tsx","../../packages/color-editable-input-hsla/src/index.tsx","../../packages/color-editable-input-rgba/src/index.tsx","../../packages/color-editable-input/src/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"Markdown_markdown__pdFcg\",\"editor\":\"Markdown_editor__ktea2\",\"warpper\":\"Markdown_warpper__j-FaN\",\"example\":\"Markdown_example__q3W5x\",\"footer\":\"Markdown_footer__ShQo5\"};","import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright © 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useContext } from 'react';\nimport EditableInputHSLA from '@uiw/react-color-editable-input-hsla';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <EditableInputHSLA\n        hsva={hsva}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsva } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-editable-input-hsla/README.md';\n  getMdStr = () => import('@uiw/react-color-editable-input-hsla/README.md');\n  example = (<Example />);\n}\n","import React from 'react';\nimport EditableInputRGBA, { EditableInputRGBAProps } from '@uiw/react-color-editable-input-rgba';\nimport { HslaColor, color as handleColor, hsvaToHsla, hslaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputHSLAProps extends Omit<EditableInputRGBAProps, 'rProps' | 'gProps' | 'bProps'> {\n  hProps?: EditableInputRGBAProps['gProps'];\n  sProps?: EditableInputRGBAProps['gProps'];\n  lProps?: EditableInputRGBAProps['gProps'];\n  aProps?: EditableInputRGBAProps['aProps'];\n}\n\nconst EditableInputHSLA = React.forwardRef<HTMLDivElement, EditableInputHSLAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-hsla',\n    hsva,\n    hProps = {},\n    sProps = {},\n    lProps = {},\n    aProps = {},\n    className,\n    onChange,\n    ...other\n  } = props;\n  const hsla = (hsva ? hsvaToHsla(hsva) : { h: 0, s: 0, l: 0, a: 0 }) as HslaColor;\n  const handleChange = (value: string | number, type: 'h' | 's' | 'l' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'h') {\n        if (value < 0) value = 0;\n        if (value > 360) value = 360;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, h: value })));\n      }\n      if (type === 's') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, s: value })));\n      }\n      if (type === 'l') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, l: value })));\n      }\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 1) value = 1;\n        onChange && onChange(handleColor(hslaToHsva({ ...hsla, a: value })));\n      }\n    }\n  };\n  return (\n    <EditableInputRGBA\n      ref={ref}\n      hsva={hsva}\n      rProps={{\n        label: 'H',\n        value: Math.round(hsla.h),\n        ...hProps,\n        onChange: (evn, val) => handleChange(val, 'h', evn),\n      }}\n      gProps={{\n        label: 'S',\n        value: `${Math.round(hsla.s)}%`,\n        ...sProps,\n        onChange: (evn, val) => handleChange(val, 's', evn),\n      }}\n      bProps={{\n        label: 'L',\n        value: `${Math.round(hsla.l)}%`,\n        ...lProps,\n        onChange: (evn, val) => handleChange(val, 'l', evn),\n      }}\n      aProps={{\n        label: 'A',\n        value: Math.round(hsla.a * 100) / 100,\n        ...aProps,\n        onChange: (evn, val) => handleChange(val, 'a', evn),\n      }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    />\n  );\n});\n\nEditableInputHSLA.displayName = 'EditableInputHSLA';\n\nexport default EditableInputHSLA;\n","import React from 'react';\nimport EditableInput, { EditableInputProps } from '@uiw/react-color-editable-input';\nimport { HsvaColor, color as handleColor, RgbaColor, ColorResult, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputRGBAProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  hsva: HsvaColor;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  rProps?: EditableInputProps;\n  gProps?: EditableInputProps;\n  bProps?: EditableInputProps;\n  aProps?: false | EditableInputProps;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst EditableInputRGBA = React.forwardRef<HTMLDivElement, EditableInputRGBAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n  const rgba = (hsva ? hsvaToRgba(hsva) : {}) as RgbaColor;\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    const value = Number(evn.target.value);\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n  const handleChange = (value: string | number, type: 'r' | 'g' | 'b' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, a: value / 100 })));\n      }\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, r: value })));\n      }\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, g: value })));\n      }\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, b: value })));\n      }\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        fontSize: 11,\n        display: 'flex',\n        ...style,\n      }}\n    >\n      <EditableInput\n        label=\"R\"\n        value={rgba.r || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'r', evn)}\n        {...rProps}\n        style={{ ...rProps.style }}\n      />\n      <EditableInput\n        label=\"G\"\n        value={rgba.g || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'g', evn)}\n        {...gProps}\n        style={{ marginLeft: 5, ...rProps.style }}\n      />\n      <EditableInput\n        label=\"B\"\n        value={rgba.b || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'b', evn)}\n        {...bProps}\n        style={{ marginLeft: 5, ...bProps.style }}\n      />\n      {aProps && (\n        <EditableInput\n          label=\"A\"\n          value={rgba.a ? parseInt(String(rgba.a * 100), 10) : 0}\n          onBlur={handleBlur}\n          placement={placement}\n          onChange={(evn, val) => handleChange(val, 'a', evn)}\n          {...aProps}\n          style={{ marginLeft: 5, ...aProps.style }}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInputRGBA.displayName = 'EditableInputRGBA';\n\nexport default EditableInputRGBA;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n\nconst validHex = (hex: string): boolean => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);\nconst getNumberValue = (value: string) => Number(String(value).replace(/%/g, ''));\n\nexport interface EditableInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  prefixCls?: string;\n  value?: string | number;\n  label?: React.ReactNode;\n  labelStyle?: React.CSSProperties;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  inputStyle?: React.CSSProperties;\n  onChange?: (evn: React.ChangeEvent<HTMLInputElement>, value: string | number) => void;\n}\n\nconst EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input',\n    placement = 'bottom',\n    label,\n    value: initValue,\n    className,\n    style,\n    labelStyle,\n    inputStyle,\n    onChange,\n    onBlur,\n    ...other\n  } = props;\n  const [value, setValue] = useState<string | number | undefined>(initValue);\n  const isFocus = useRef(false);\n\n  useEffect(() => {\n    if (props.value !== value) {\n      if (!isFocus.current) {\n        setValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  function handleChange(evn: React.FocusEvent<HTMLInputElement>, valInit?: string) {\n    const value = valInit || evn.target.value;\n    if (validHex(value)) {\n      onChange && onChange(evn, value);\n    }\n    const val = getNumberValue(value);\n    if (!isNaN(val)) {\n      onChange && onChange(evn, val);\n    }\n    setValue(value);\n    // setValueProps(value);\n  }\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    isFocus.current = false;\n    setValue(props.value);\n    onBlur && onBlur(evn);\n  }\n  const placementStyle: React.CSSProperties = {};\n  if (placement === 'bottom') {\n    placementStyle['flexDirection'] = 'column';\n  }\n  if (placement === 'top') {\n    placementStyle['flexDirection'] = 'column-reverse';\n  }\n  if (placement === 'left') {\n    placementStyle['flexDirection'] = 'row-reverse';\n  }\n  return (\n    <div\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        position: 'relative',\n        alignItems: 'center',\n        display: 'flex',\n        fontSize: 11,\n        ...placementStyle,\n        ...style,\n      }}\n    >\n      <input\n        ref={ref}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        onFocus={() => (isFocus.current = true)}\n        {...other}\n        style={{\n          width: '100%',\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 3,\n          paddingRight: 3,\n          fontSize: 11,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: 'rgb(204 204 204) 0px 0px 0px 1px inset',\n          ...inputStyle,\n        }}\n      />\n      {label && (\n        <span\n          style={{\n            color: 'rgb(153, 153, 153)',\n            textTransform: 'capitalize',\n            ...labelStyle,\n          }}\n          children={label}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInput.displayName = 'EditableInput';\n\nexport default EditableInput;\n"],"names":["EditorUrl","editorUrl","className","styles","target","rel","href","Markdown","props","getMdStr","example","state","mdStr","this","then","str","setState","default","source","replace","style","padding","minHeight","src","alt","Component","Example","useContext","Context","hsva","dispatch","width","onChange","color","Page","EditableInputHSLA","React","ref","prefixCls","hProps","sProps","lProps","aProps","other","hsla","hsvaToHsla","h","s","l","a","handleChange","value","type","evn","handleColor","hslaToHsva","_jsx","EditableInputRGBA","rProps","label","Math","round","val","gProps","bProps","filter","Boolean","join","displayName","placement","rgba","hsvaToRgba","handleBlur","Number","rgbaToHsva","r","g","b","_jsxs","fontSize","display","children","EditableInput","onBlur","marginLeft","parseInt","String","initValue","labelStyle","inputStyle","useState","setValue","isFocus","useRef","useEffect","current","placementStyle","position","alignItems","valInit","test","getNumberValue","isNaN","autoComplete","onFocus","paddingTop","paddingBottom","paddingLeft","paddingRight","boxSizing","border","boxShadow","textTransform"],"sourceRoot":""}