{"version":3,"file":"static/js/256.11f1c044.chunk.js","mappings":"uMACA,EAA2B,2BAA3B,EAA+D,yBAA/D,EAAkG,0BAAlG,EAAsI,0BAAtI,EAAyK,yB,UCQnKA,EAAY,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UACnB,OAAOA,GACL,cACEC,UAAWC,EACXC,OAAO,SACPC,IAAI,aACJC,KAAI,wDAAmDL,GAJzD,4BAQE,MAGeM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACnB,WAAYC,GAAuB,IAAD,yBAChC,cAAMA,IAKRP,eANkC,IAOlCQ,cAPkC,IAQlCC,aARkC,EAEhC,EAAKC,MAAQ,CACXC,MAAO,IAHuB,EA2DjC,OAtDA,yCAID,WAAqB,IAAD,OACdC,KAAKJ,UACPI,KAAKJ,WAAWK,MAAK,SAACC,GACpB,EAAKC,SAAS,CACZJ,MAAOG,EAAIE,SAAWF,SAI7B,oBACD,WACE,OACE,iBAAKb,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,SAACH,EAAD,CAAWC,UAAWY,KAAKZ,YAC1BY,KAAKH,UAAW,gBAAKR,UAAWC,EAAhB,SAAiCU,KAAKH,WACvD,SAAC,IAAD,CACEQ,OAAQL,KAAKF,MAAMC,MAAMO,QAAQ,2BAA4B,IAC7DC,MAAO,CAAEC,QAAS,YAAaC,UAAW,QAE5C,SAACtB,EAAD,CAAWC,UAAWY,KAAKZ,gBAE7B,iBAAKC,UAAWC,EAAhB,WACE,cAAGG,KAAK,0EAA0EF,OAAO,UAAzF,UACE,gBAAKmB,IAAI,oDAAoDC,IAAI,qBAEnE,cAAGlB,KAAK,8CAA8CF,OAAO,UAA7D,UACE,gBAAKmB,IAAI,yDAAyDC,IAAI,qBAExE,cAAGlB,KAAK,kDAAkDF,OAAO,UAAjE,UACE,gBAAKmB,IAAI,4DAA4DC,IAAI,oBAE3E,cAAGlB,KAAK,gDAAgDF,OAAO,UAA/D,UACE,gBAAKmB,IAAI,8DAA8DC,IAAI,sBAE7E,cAAGlB,KAAK,uCAAuCF,OAAO,UAAtD,UACE,gBAAKmB,IAAI,0CAA0CC,IAAI,mBAEzD,cAAGlB,KAAK,iDAAiDF,OAAO,UAAhE,UACE,gBAAKmB,IAAI,oDAAoDC,IAAI,WAEnE,+CACmB,KACjB,cAAGlB,KAAK,2BAA2BF,OAAO,UAA1C,mBAFF,sCAUP,EA5DkBG,CAAiBkB,EAAAA,Y,yKCjBtC,SAASC,IACP,OAA2BC,EAAAA,EAAAA,YAAWC,EAAAA,IAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACd,OACE,4BACE,iBAAKV,MAAO,CAAEW,QAAS,OAAQC,WAAY,aAAcC,eAAgB,SAAUZ,QAAS,iBAA5F,WACE,SAAC,IAAD,CACED,MAAO,CAAEc,SAAU,IAAKC,YAAa,IACrCN,KAAMA,EACNO,SAAU,SAACC,GACTP,EAAU,CAAED,MAAK,kBAAMA,GAASQ,EAAMR,YAG1C,SAAC,IAAD,CACET,MAAO,CAAEc,SAAU,KACnBL,KAAMA,EACNS,UAAU,MACVF,SAAU,SAACC,GACTP,EAAU,CAAED,MAAK,kBAAMA,GAASQ,EAAMR,eAI5C,iBAAKT,MAAO,CAAEW,QAAS,OAAQC,WAAY,aAAcC,eAAgB,UAAzE,WACE,SAAC,IAAD,CACEb,MAAO,CAAEc,SAAU,IAAKC,YAAa,IACrCN,KAAMA,EACNS,UAAU,OACVF,SAAU,SAACC,GACTP,EAAU,CAAED,MAAK,kBAAMA,GAASQ,EAAMR,YAG1C,SAAC,IAAD,CACET,MAAO,CAAEc,SAAU,KACnBL,KAAMA,EACNS,UAAU,QACVF,SAAU,SAACC,GACTP,EAAU,CAAED,MAAK,kBAAMA,GAASQ,EAAMR,iBAMjD,IAEoBU,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAGR,OAHQA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACnBtC,UAAY,gDAAgD,EAC5DQ,SAAW,kBAAM,+BAAN,EACXC,SAAW,SAACgB,EAAD,uBAHQa,CAAahC,EAAAA,I,yLCjC5BiC,EAAoBC,EAAAA,YAAyD,SAACjC,EAAOkC,GACzF,MAYIlC,EAXFmC,UAAAA,OADF,MACc,8BADd,EAEEd,EAUErB,EAVFqB,KAFF,EAYIrB,EATF8B,UAAAA,OAHF,MAGc,SAHd,IAYI9B,EARFoC,OAAAA,OAJF,MAIW,GAJX,IAYIpC,EAPFqC,OAAAA,OALF,MAKW,GALX,IAYIrC,EANFsC,OAAAA,OANF,MAMW,GANX,IAYItC,EALFuC,OAAAA,OAPF,MAOW,GAPX,EAQE7C,EAIEM,EAJFN,UACAkB,EAGEZ,EAHFY,MACAgB,EAEE5B,EAFF4B,SACGY,GAXL,OAYIxC,EAZJ,GAaMyC,EAAQpB,GAAOqB,EAAAA,EAAAA,IAAWrB,GAAQ,GACxC,SAASsB,EAAWC,GAClB,IAAMC,EAAQC,OAAOF,EAAIhD,OAAOiD,OAC5BA,GAASA,EAAQ,MACnBD,EAAIhD,OAAOiD,MAAQ,OAEjBA,GAASA,EAAQ,IACnBD,EAAIhD,OAAOiD,MAAQ,KAGvB,IAAME,EAAe,SAACF,EAAwBG,EAA6BJ,GACpD,kBAAVC,IACI,MAATG,IACEH,EAAQ,IAAGA,EAAQ,GACnBA,EAAQ,MAAKA,EAAQ,KACzBjB,GAAYA,GAASqB,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,KAAW,UAAKT,EAAN,CAAYU,EAAGN,EAAQ,UAEhEA,EAAQ,MACVA,EAAQ,IACRD,EAAIhD,OAAOiD,MAAQ,OAEjBA,EAAQ,IACVA,EAAQ,EACRD,EAAIhD,OAAOiD,MAAQ,KAER,MAATG,GACFpB,GAAYA,GAASqB,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,KAAW,UAAKT,EAAN,CAAYW,EAAGP,OAE/C,MAATG,GACFpB,GAAYA,GAASqB,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,KAAW,UAAKT,EAAN,CAAYY,EAAGR,OAE/C,MAATG,GACFpB,GAAYA,GAASqB,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,KAAW,UAAKT,EAAN,CAAYa,EAAGT,SAIhE,OACEU,EAAAA,EAAAA,MAAAA,OAAAA,EAAAA,EAAAA,GAAAA,CACErB,IAAKA,EACLxC,UAAW,CAACyC,EAAWzC,GAAa,IAAI8D,OAAOC,SAASC,KAAK,MACzDlB,EAHN,CAIE5B,OAAK,QACH+C,SAAU,GACVpC,QAAS,QACNX,GAPPgD,SAAAA,EAUEC,EAAAA,EAAAA,KAACC,EAAAA,GAAD,QACEC,MAAM,IACNlB,MAAOJ,EAAKW,GAAK,EACjBY,OAAQrB,EACRb,UAAWA,EACXF,SAAU,SAACgB,EAAKqB,GAAN,OAAclB,EAAakB,EAAK,IAAKrB,KAC3CR,EANN,CAOExB,OAAK,UAAOwB,EAAOxB,WAErBiD,EAAAA,EAAAA,KAACC,EAAAA,GAAD,QACEC,MAAM,IACNlB,MAAOJ,EAAKY,GAAK,EACjBW,OAAQrB,EACRb,UAAWA,EACXF,SAAU,SAACgB,EAAKqB,GAAN,OAAclB,EAAakB,EAAK,IAAKrB,KAC3CP,EANN,CAOEzB,OAAK,QAAIsD,WAAY,GAAM9B,EAAOxB,WAEpCiD,EAAAA,EAAAA,KAACC,EAAAA,GAAD,QACEC,MAAM,IACNlB,MAAOJ,EAAKa,GAAK,EACjBU,OAAQrB,EACRb,UAAWA,EACXF,SAAU,SAACgB,EAAKqB,GAAN,OAAclB,EAAakB,EAAK,IAAKrB,KAC3CN,EANN,CAOE1B,OAAK,QAAIsD,WAAY,GAAM5B,EAAO1B,UAEnC2B,IACCsB,EAAAA,EAAAA,KAACC,EAAAA,GAAD,QACEC,MAAM,IACNlB,MAAOJ,EAAKU,EAAIgB,SAASC,OAAgB,IAAT3B,EAAKU,GAAU,IAAM,EACrDa,OAAQrB,EACRb,UAAWA,EACXF,SAAU,SAACgB,EAAKqB,GAAN,OAAclB,EAAakB,EAAK,IAAKrB,KAC3CL,EANN,CAOE3B,OAAK,QAAIsD,WAAY,GAAM3B,EAAO3B,iBAO5CoB,EAAkBqC,YAAc,oBAEhC,O,uLCxGMP,EAAgB7B,EAAAA,YAAuD,SAACjC,EAAOkC,GACnF,MAYIlC,EAXFmC,UAAAA,OADF,MACc,yBADd,IAYInC,EAVF8B,UAAAA,OAFF,MAEc,SAFd,EAGEiC,EASE/D,EATF+D,MACOO,EAQLtE,EARF6C,MACAnD,EAOEM,EAPFN,UACAkB,EAMEZ,EANFY,MACA2D,EAKEvE,EALFuE,WACAC,EAIExE,EAJFwE,WACA5C,EAGE5B,EAHF4B,SACAoC,EAEEhE,EAFFgE,OACGxB,GAXL,OAYIxC,EAZJ,GAaA,GAA0ByE,EAAAA,EAAAA,UAAsCH,GAAhE,eAAOzB,EAAP,KAAc6B,EAAd,KACMC,GAAUC,EAAAA,EAAAA,SAAO,IAEvBC,EAAAA,EAAAA,YAAU,WACJ7E,EAAM6C,QAAUA,IACb8B,EAAQG,SACXJ,EAAS1E,EAAM6C,UAGlB,CAAC7C,EAAM6C,QAmBV,IAAMkC,EAAsC,GAU5C,MATkB,WAAdjD,IACFiD,EAAc,cAAoB,UAElB,QAAdjD,IACFiD,EAAc,cAAoB,kBAElB,SAAdjD,IACFiD,EAAc,cAAoB,gBAGlCxB,EAAAA,EAAAA,MAAAA,MAAAA,CACE7D,UAAW,CAACyC,EAAWzC,GAAa,IAAI8D,OAAOC,SAASC,KAAK,KAC7D9C,OAAK,QACHoE,SAAU,WACVxD,WAAY,SACZD,QAAS,OACToC,SAAU,IACPoB,EACAnE,GARPgD,SAAAA,EAWEC,EAAAA,EAAAA,KAAAA,SAAAA,EAAAA,EAAAA,GAAAA,CACE3B,IAAKA,EACLW,MAAOA,EACPjB,SA1CN,SAAsBgB,EAAyCqC,GAC7D,IAAMpC,EAAQoC,GAAWrC,EAAIhD,OAAOiD,MAvCG,8BAA8BqC,KAwCxDrC,IACXjB,GAAYA,EAASgB,EAAKC,GAE5B,IAAMoB,EA1CcpB,SAAAA,GAAD,OAAmBC,OAAOsB,OAAOvB,GAAOlC,QAAQ,KAAM,KA0C7DwE,CAAetC,GACtBuC,MAAMnB,IACTrC,GAAYA,EAASgB,EAAKqB,GAE5BS,EAAS7B,IAkCLmB,OA/BN,SAAoBpB,GAClB+B,EAAQG,SAAU,EAClBJ,EAAS1E,EAAM6C,OACfmB,GAAUA,EAAOpB,IA6BbyC,aAAa,MACbC,QAAS,kBAAOX,EAAQG,SAAU,IAC9BtC,EAPN,CAQE5B,OAAK,QACH2E,MAAO,OACPC,WAAY,EACZC,cAAe,EACfC,YAAa,EACbC,aAAc,EACdhC,SAAU,GACViC,UAAW,aACXC,OAAQ,OACRC,UAAW,0CACRtB,MAGNT,IACCF,EAAAA,EAAAA,KAAAA,OAAAA,CACEjD,OAAK,QACHiB,MAAO,qBACPkE,cAAe,cACZxB,GAELX,SAAUG,UAOpBD,EAAcO,YAAc,gBAE5B","sources":["webpack://website/./src/components/Markdown.module.less?7236","components/Markdown.tsx","pages/editable-input-rgba/index.tsx","../../packages/color-editable-input-rgba/src/index.tsx","../../packages/color-editable-input/src/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"Markdown_markdown__pdFcg\",\"editor\":\"Markdown_editor__ktea2\",\"warpper\":\"Markdown_warpper__j-FaN\",\"example\":\"Markdown_example__q3W5x\",\"footer\":\"Markdown_footer__ShQo5\"};","import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright Â© 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useContext } from 'react';\nimport EditableInputRGBA from '@uiw/react-color-editable-input-rgba';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'center', padding: '10px 0 10px 0' }}>\n        <EditableInputRGBA\n          style={{ maxWidth: 180, marginRight: 15 }}\n          hsva={hsva}\n          onChange={(color) => {\n            dispatch!({ hsva: { ...hsva, ...color.hsva } });\n          }}\n        />\n        <EditableInputRGBA\n          style={{ maxWidth: 180 }}\n          hsva={hsva}\n          placement=\"top\"\n          onChange={(color) => {\n            dispatch!({ hsva: { ...hsva, ...color.hsva } });\n          }}\n        />\n      </div>\n      <div style={{ display: 'flex', alignItems: 'flex-start', justifyContent: 'center' }}>\n        <EditableInputRGBA\n          style={{ maxWidth: 180, marginRight: 15 }}\n          hsva={hsva}\n          placement=\"left\"\n          onChange={(color) => {\n            dispatch!({ hsva: { ...hsva, ...color.hsva } });\n          }}\n        />\n        <EditableInputRGBA\n          style={{ maxWidth: 180 }}\n          hsva={hsva}\n          placement=\"right\"\n          onChange={(color) => {\n            dispatch!({ hsva: { ...hsva, ...color.hsva } });\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-editable-input-rgba/README.md';\n  getMdStr = () => import('@uiw/react-color-editable-input-rgba/README.md');\n  example = (<Example />);\n}\n","import React from 'react';\nimport EditableInput, { EditableInputProps } from '@uiw/react-color-editable-input';\nimport { HsvaColor, color as handleColor, RgbaColor, ColorResult, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputRGBAProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  hsva: HsvaColor;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  rProps?: EditableInputProps;\n  gProps?: EditableInputProps;\n  bProps?: EditableInputProps;\n  aProps?: false | EditableInputProps;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst EditableInputRGBA = React.forwardRef<HTMLDivElement, EditableInputRGBAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n  const rgba = (hsva ? hsvaToRgba(hsva) : {}) as RgbaColor;\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    const value = Number(evn.target.value);\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n  const handleChange = (value: string | number, type: 'r' | 'g' | 'b' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, a: value / 100 })));\n      }\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, r: value })));\n      }\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, g: value })));\n      }\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, b: value })));\n      }\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        fontSize: 11,\n        display: 'flex',\n        ...style,\n      }}\n    >\n      <EditableInput\n        label=\"R\"\n        value={rgba.r || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'r', evn)}\n        {...rProps}\n        style={{ ...rProps.style }}\n      />\n      <EditableInput\n        label=\"G\"\n        value={rgba.g || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'g', evn)}\n        {...gProps}\n        style={{ marginLeft: 5, ...rProps.style }}\n      />\n      <EditableInput\n        label=\"B\"\n        value={rgba.b || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'b', evn)}\n        {...bProps}\n        style={{ marginLeft: 5, ...bProps.style }}\n      />\n      {aProps && (\n        <EditableInput\n          label=\"A\"\n          value={rgba.a ? parseInt(String(rgba.a * 100), 10) : 0}\n          onBlur={handleBlur}\n          placement={placement}\n          onChange={(evn, val) => handleChange(val, 'a', evn)}\n          {...aProps}\n          style={{ marginLeft: 5, ...aProps.style }}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInputRGBA.displayName = 'EditableInputRGBA';\n\nexport default EditableInputRGBA;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n\nconst validHex = (hex: string): boolean => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);\nconst getNumberValue = (value: string) => Number(String(value).replace(/%/g, ''));\n\nexport interface EditableInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  prefixCls?: string;\n  value?: string | number;\n  label?: React.ReactNode;\n  labelStyle?: React.CSSProperties;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  inputStyle?: React.CSSProperties;\n  onChange?: (evn: React.ChangeEvent<HTMLInputElement>, value: string | number) => void;\n}\n\nconst EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input',\n    placement = 'bottom',\n    label,\n    value: initValue,\n    className,\n    style,\n    labelStyle,\n    inputStyle,\n    onChange,\n    onBlur,\n    ...other\n  } = props;\n  const [value, setValue] = useState<string | number | undefined>(initValue);\n  const isFocus = useRef(false);\n\n  useEffect(() => {\n    if (props.value !== value) {\n      if (!isFocus.current) {\n        setValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  function handleChange(evn: React.FocusEvent<HTMLInputElement>, valInit?: string) {\n    const value = valInit || evn.target.value;\n    if (validHex(value)) {\n      onChange && onChange(evn, value);\n    }\n    const val = getNumberValue(value);\n    if (!isNaN(val)) {\n      onChange && onChange(evn, val);\n    }\n    setValue(value);\n    // setValueProps(value);\n  }\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    isFocus.current = false;\n    setValue(props.value);\n    onBlur && onBlur(evn);\n  }\n  const placementStyle: React.CSSProperties = {};\n  if (placement === 'bottom') {\n    placementStyle['flexDirection'] = 'column';\n  }\n  if (placement === 'top') {\n    placementStyle['flexDirection'] = 'column-reverse';\n  }\n  if (placement === 'left') {\n    placementStyle['flexDirection'] = 'row-reverse';\n  }\n  return (\n    <div\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        position: 'relative',\n        alignItems: 'center',\n        display: 'flex',\n        fontSize: 11,\n        ...placementStyle,\n        ...style,\n      }}\n    >\n      <input\n        ref={ref}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        onFocus={() => (isFocus.current = true)}\n        {...other}\n        style={{\n          width: '100%',\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 3,\n          paddingRight: 3,\n          fontSize: 11,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: 'rgb(204 204 204) 0px 0px 0px 1px inset',\n          ...inputStyle,\n        }}\n      />\n      {label && (\n        <span\n          style={{\n            color: 'rgb(153, 153, 153)',\n            textTransform: 'capitalize',\n            ...labelStyle,\n          }}\n          children={label}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInput.displayName = 'EditableInput';\n\nexport default EditableInput;\n"],"names":["EditorUrl","editorUrl","className","styles","target","rel","href","Markdown","props","getMdStr","example","state","mdStr","this","then","str","setState","default","source","replace","style","padding","minHeight","src","alt","Component","Example","useContext","Context","hsva","dispatch","display","alignItems","justifyContent","maxWidth","marginRight","onChange","color","placement","Page","EditableInputRGBA","React","ref","prefixCls","rProps","gProps","bProps","aProps","other","rgba","hsvaToRgba","handleBlur","evn","value","Number","handleChange","type","handleColor","rgbaToHsva","a","r","g","b","_jsxs","filter","Boolean","join","fontSize","children","_jsx","EditableInput","label","onBlur","val","marginLeft","parseInt","String","displayName","initValue","labelStyle","inputStyle","useState","setValue","isFocus","useRef","useEffect","current","placementStyle","position","valInit","test","getNumberValue","isNaN","autoComplete","onFocus","width","paddingTop","paddingBottom","paddingLeft","paddingRight","boxSizing","border","boxShadow","textTransform"],"sourceRoot":""}