{"version":3,"file":"static/js/410.3855e278.chunk.js","mappings":"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","sources":["webpack://website/./src/components/Markdown.module.less?7236","components/Markdown.tsx","pages/sketch/index.tsx","../../packages/color-editable-input-rgba/src/index.tsx","../../packages/color-editable-input/src/index.tsx","../../packages/color-hue/src/index.tsx","../../packages/color-saturation/src/Pointer.tsx","../../packages/color-saturation/src/index.tsx","../../packages/color-sketch/src/index.tsx","../../packages/color-swatch/src/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"Markdown_markdown__pdFcg\",\"editor\":\"Markdown_editor__ktea2\",\"warpper\":\"Markdown_warpper__j-FaN\",\"example\":\"Markdown_example__q3W5x\",\"footer\":\"Markdown_footer__ShQo5\"};","import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright © 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useContext } from 'react';\nimport Sketch from '@uiw/react-color-sketch';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <Sketch\n        color={hsva}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsva } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-sketch/README.md';\n  getMdStr = () => import('@uiw/react-color-sketch/README.md');\n  example = (<Example />);\n}\n","import React from 'react';\nimport EditableInput, { EditableInputProps } from '@uiw/react-color-editable-input';\nimport { HsvaColor, color as handleColor, RgbaColor, ColorResult, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputRGBAProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  hsva: HsvaColor;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  rProps?: EditableInputProps;\n  gProps?: EditableInputProps;\n  bProps?: EditableInputProps;\n  aProps?: false | EditableInputProps;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst EditableInputRGBA = React.forwardRef<HTMLDivElement, EditableInputRGBAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n  const rgba = (hsva ? hsvaToRgba(hsva) : {}) as RgbaColor;\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    const value = Number(evn.target.value);\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n  const handleChange = (value: string | number, type: 'r' | 'g' | 'b' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, a: value / 100 })));\n      }\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, r: value })));\n      }\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, g: value })));\n      }\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, b: value })));\n      }\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        fontSize: 11,\n        display: 'flex',\n        ...style,\n      }}\n    >\n      <EditableInput\n        label=\"R\"\n        value={rgba.r || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'r', evn)}\n        {...rProps}\n        style={{ ...rProps.style }}\n      />\n      <EditableInput\n        label=\"G\"\n        value={rgba.g || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'g', evn)}\n        {...gProps}\n        style={{ marginLeft: 5, ...rProps.style }}\n      />\n      <EditableInput\n        label=\"B\"\n        value={rgba.b || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'b', evn)}\n        {...bProps}\n        style={{ marginLeft: 5, ...bProps.style }}\n      />\n      {aProps && (\n        <EditableInput\n          label=\"A\"\n          value={rgba.a ? parseInt(String(rgba.a * 100), 10) : 0}\n          onBlur={handleBlur}\n          placement={placement}\n          onChange={(evn, val) => handleChange(val, 'a', evn)}\n          {...aProps}\n          style={{ marginLeft: 5, ...aProps.style }}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInputRGBA.displayName = 'EditableInputRGBA';\n\nexport default EditableInputRGBA;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n\nconst validHex = (hex: string): boolean => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);\nconst getNumberValue = (value: string) => Number(String(value).replace(/%/g, ''));\n\nexport interface EditableInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  prefixCls?: string;\n  value?: string | number;\n  label?: React.ReactNode;\n  labelStyle?: React.CSSProperties;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  inputStyle?: React.CSSProperties;\n  onChange?: (evn: React.ChangeEvent<HTMLInputElement>, value: string | number) => void;\n}\n\nconst EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input',\n    placement = 'bottom',\n    label,\n    value: initValue,\n    className,\n    style,\n    labelStyle,\n    inputStyle,\n    onChange,\n    onBlur,\n    ...other\n  } = props;\n  const [value, setValue] = useState<string | number | undefined>(initValue);\n  const isFocus = useRef(false);\n\n  useEffect(() => {\n    if (props.value !== value) {\n      if (!isFocus.current) {\n        setValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  function handleChange(evn: React.FocusEvent<HTMLInputElement>, valInit?: string) {\n    const value = valInit || evn.target.value;\n    if (validHex(value)) {\n      onChange && onChange(evn, value);\n    }\n    const val = getNumberValue(value);\n    if (!isNaN(val)) {\n      onChange && onChange(evn, val);\n    }\n    setValue(value);\n    // setValueProps(value);\n  }\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    isFocus.current = false;\n    setValue(props.value);\n    onBlur && onBlur(evn);\n  }\n  const placementStyle: React.CSSProperties = {};\n  if (placement === 'bottom') {\n    placementStyle['flexDirection'] = 'column';\n  }\n  if (placement === 'top') {\n    placementStyle['flexDirection'] = 'column-reverse';\n  }\n  if (placement === 'left') {\n    placementStyle['flexDirection'] = 'row-reverse';\n  }\n  return (\n    <div\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        position: 'relative',\n        alignItems: 'center',\n        display: 'flex',\n        fontSize: 11,\n        ...placementStyle,\n        ...style,\n      }}\n    >\n      <input\n        ref={ref}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        onFocus={() => (isFocus.current = true)}\n        {...other}\n        style={{\n          width: '100%',\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 3,\n          paddingRight: 3,\n          fontSize: 11,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: 'rgb(204 204 204) 0px 0px 0px 1px inset',\n          ...inputStyle,\n        }}\n      />\n      {label && (\n        <span\n          style={{\n            color: 'rgb(153, 153, 153)',\n            textTransform: 'capitalize',\n            ...labelStyle,\n          }}\n          children={label}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInput.displayName = 'EditableInput';\n\nexport default EditableInput;\n","import React from 'react';\nimport Alpha, { AlphaProps } from '@uiw/react-color-alpha';\n\nexport interface HueProps extends Omit<AlphaProps, 'hsva' | 'onChange'> {\n  onChange?: (newHue: { h: number }) => void;\n  hue: number;\n}\n\nconst Hue = React.forwardRef<HTMLDivElement, HueProps>((props, ref) => {\n  const { prefixCls = 'w-color-hue', className, hue = 0, onChange, direction = 'horizontal', ...other } = props;\n  return (\n    <Alpha\n      ref={ref}\n      className={`${prefixCls} ${className || ''}`}\n      {...other}\n      direction={direction}\n      background={`linear-gradient(to ${\n        direction === 'horizontal' ? 'right' : 'bottom'\n      }, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 17%, rgb(0, 255, 0) 33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 67%, rgb(255, 0, 255) 83%, rgb(255, 0, 0) 100%)`}\n      hsva={{ h: hue, s: 100, v: 100, a: hue / 360 }}\n      onChange={(_, interaction) => {\n        onChange && onChange({ h: direction === 'horizontal' ? 360 * interaction.left : 360 * interaction.top });\n      }}\n    />\n  );\n});\n\nHue.displayName = 'Hue';\n\nexport default Hue;\n","import React from 'react';\nimport { useMemo } from 'react';\n\nexport interface PointerProps extends React.HTMLAttributes<HTMLDivElement> {\n  prefixCls?: string;\n  top?: string;\n  left: string;\n  color?: string;\n}\n\nconst BOXSHADOW = 'rgb(255 255 255) 0px 0px 0px 1.5px, rgb(0 0 0 / 30%) 0px 0px 1px 1px inset, rgb(0 0 0 / 40%) 0px 0px 1px 2px';\n\nexport const Pointer = ({ className, color, left, top, prefixCls }: PointerProps): JSX.Element => {\n  const style: React.CSSProperties = {\n    position: 'absolute',\n    top,\n    left,\n  };\n  return useMemo(\n    () => (\n      <div className={`${prefixCls}-pointer ${className || ''}`} style={style}>\n        <div\n          className={`${prefixCls}-fill`}\n          style={{\n            width: 6,\n            height: 6,\n            transform: 'translate(-3px, -3px)',\n            boxShadow: BOXSHADOW,\n            borderRadius: '50%',\n            backgroundColor: color,\n          }}\n        />\n      </div>\n    ),\n    [top, left, color, className, prefixCls],\n  );\n};\n","import React from 'react';\nimport { HsvaColor, hsvaToHslaString } from '@uiw/color-convert';\nimport Interactive, { Interaction } from '@uiw/react-drag-event-interactive';\nimport { Pointer, PointerProps } from './Pointer';\n\nexport interface SaturationProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  /** hsva => `{ h: 0, s: 75, v: 82, a: 1 }` */\n  hsva: HsvaColor;\n  radius?: React.CSSProperties['borderRadius'];\n  /** React Component, Custom pointer component */\n  pointer?: ({ prefixCls, left, top, color }: PointerProps) => JSX.Element;\n  onChange?: (newColor: HsvaColor) => void;\n}\n\nconst Saturation = React.forwardRef<HTMLDivElement, SaturationProps>((props, ref) => {\n  const { prefixCls = 'w-color-saturation', radius = 0, pointer, className, style, hsva, onChange, ...other } = props;\n  const containerStyle: React.CSSProperties = {\n    width: 200,\n    height: 200,\n    borderRadius: radius,\n    ...style,\n    position: 'relative',\n  };\n\n  const handleChange = (interaction: Interaction, event: MouseEvent | TouchEvent) => {\n    onChange &&\n      onChange({\n        h: hsva.h,\n        s: interaction.left * 100,\n        v: (1 - interaction.top) * 100,\n        a: hsva.a,\n        // source: 'hsv',\n      });\n  };\n\n  const comProps = {\n    top: `${100 - hsva.v}%`,\n    left: `${hsva.s}%`,\n    color: hsvaToHslaString(hsva),\n  };\n\n  return (\n    <Interactive\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        position: 'absolute',\n        inset: 0,\n        cursor: 'crosshair',\n        backgroundImage: `linear-gradient(0deg, #000, transparent), linear-gradient(90deg, #fff, hsl(${hsva.h}, 100%, 50%))`,\n        ...containerStyle,\n      }}\n      ref={ref}\n      onMove={handleChange}\n      onDown={handleChange}\n    >\n      {React.createElement(pointer || Pointer, {\n        prefixCls,\n        ...comProps,\n      })}\n    </Interactive>\n  );\n});\n\nSaturation.displayName = 'Saturation';\n\nexport default Saturation;\n","import React, { useState, useCallback, Fragment } from 'react';\nimport Saturation from '@uiw/react-color-saturation';\nimport Alpha from '@uiw/react-color-alpha';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport { PointerProps } from '@uiw/react-color-alpha/lib/cjs/Pointer';\nimport Hue from '@uiw/react-color-hue';\nimport {\n  validHex,\n  HsvaColor,\n  hsvaToHex,\n  hsvaToRgbaString,\n  hexToHsva,\n  color as handleColor,\n  ColorResult,\n} from '@uiw/color-convert';\nimport Swatch, { SwatchPresetColor } from '@uiw/react-color-swatch';\nimport { useEffect } from 'react';\n\nconst PRESET_COLORS = [\n  '#D0021B',\n  '#F5A623',\n  '#f8e61b',\n  '#8B572A',\n  '#7ED321',\n  '#417505',\n  '#BD10E0',\n  '#9013FE',\n  '#4A90E2',\n  '#50E3C2',\n  '#B8E986',\n  '#000000',\n  '#4A4A4A',\n  '#9B9B9B',\n  '#FFFFFF',\n];\n\nexport interface SketchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  width?: number;\n  color?: string | HsvaColor;\n  presetColors?: false | SwatchPresetColor[];\n  editableDisable?: boolean;\n  onChange?: (newShade: ColorResult) => void;\n}\n\nconst Bar = (props: PointerProps) => (\n  <div\n    style={{\n      boxShadow: 'rgb(0 0 0 / 60%) 0px 0px 2px',\n      width: 4,\n      top: 1,\n      bottom: 1,\n      left: props.left,\n      borderRadius: 1,\n      position: 'absolute',\n      backgroundColor: '#fff',\n    }}\n  />\n);\n\nconst Sketch = React.forwardRef<HTMLDivElement, SketchProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-sketch',\n    className,\n    onChange,\n    width = 218,\n    presetColors = PRESET_COLORS,\n    color,\n    editableDisable = true,\n    style,\n    ...other\n  } = props;\n  const [hsva, setHsva] = useState({ h: 209, s: 36, v: 90, a: 1 });\n  useEffect(() => {\n    if (typeof color === 'string' && validHex(color)) {\n      setHsva(hexToHsva(color));\n    }\n    if (typeof color === 'object') {\n      setHsva(color);\n    }\n  }, [color]);\n\n  const handleChange = useCallback(\n    (hsv: HsvaColor) => {\n      setHsva(hsv);\n      onChange && onChange(handleColor(hsv));\n    },\n    [hsva],\n  );\n\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      handleChange(hexToHsva(value));\n    }\n  };\n  return (\n    <div\n      {...other}\n      className={`${prefixCls} ${className || ''}`}\n      ref={ref}\n      style={{\n        background: 'rgb(255, 255, 255)',\n        borderRadius: 4,\n        boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px, rgb(0 0 0 / 15%) 0px 8px 16px',\n        width,\n        ...style,\n      }}\n    >\n      <div style={{ padding: '10px 10px 8px' }}>\n        <Saturation\n          hsva={hsva}\n          style={{ width: 'auto', height: 150 }}\n          onChange={(newColor) => handleChange({ ...hsva, ...newColor, a: hsva.a })}\n        />\n        <div style={{ display: 'flex', marginTop: 4 }}>\n          <div style={{ flex: 1 }}>\n            <Hue\n              width=\"auto\"\n              height={10}\n              hue={hsva.h}\n              pointer={Bar}\n              innerProps={{\n                style: { marginLeft: 1, marginRight: 5 },\n              }}\n              onChange={(newHue) => handleChange({ ...hsva, ...newHue })}\n            />\n            <Alpha\n              width=\"auto\"\n              height={10}\n              hsva={hsva}\n              pointer={Bar}\n              style={{ marginTop: 4 }}\n              innerProps={{\n                style: { marginLeft: 1, marginRight: 5 },\n              }}\n              onChange={(newAlpha) => {\n                handleChange({ ...hsva, ...{ a: newAlpha.a } });\n              }}\n            />\n          </div>\n          <Alpha\n            width={24}\n            height={24}\n            hsva={hsva}\n            radius={2}\n            style={{\n              marginLeft: 4,\n            }}\n            bgProps={{ style: { background: 'transparent' } }}\n            innerProps={{\n              style: {\n                borderRadius: 2,\n                background: hsvaToRgbaString(hsva),\n                boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset, rgb(0 0 0 / 25%) 0px 0px 4px inset',\n              },\n            }}\n            pointer={() => <Fragment />}\n          />\n        </div>\n      </div>\n      {editableDisable && (\n        <div style={{ display: 'flex', margin: '0 10px 3px 10px' }}>\n          <EditableInput\n            label=\"Hex\"\n            value={hsvaToHex(hsva).replace(/^#/, '').toLocaleUpperCase()}\n            onChange={(evn, val) => handleHex(val, evn)}\n            style={{ minWidth: 58 }}\n          />\n          <RGBA hsva={hsva} style={{ marginLeft: 6 }} onChange={(result) => handleChange(result.hsva)} />\n        </div>\n      )}\n      {presetColors && presetColors.length > 0 && (\n        <Swatch\n          style={{\n            borderTop: '1px solid rgb(238, 238, 238)',\n            paddingTop: 10,\n            paddingLeft: 10,\n          }}\n          colors={presetColors}\n          color={hsvaToHex(hsva)}\n          onChange={(hsvColor) => handleChange(hsvColor)}\n          rectProps={{\n            style: {\n              marginRight: 10,\n              marginBottom: 10,\n              borderRadius: 3,\n              boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px inset',\n              // display: 'flex',\n              // alignItems: 'center',\n              // justifyContent: 'center',\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n});\n\nSketch.displayName = 'Sketch';\n\nexport default Sketch;\n","import React from 'react';\nimport { HsvaColor, hexToHsva } from '@uiw/color-convert';\n\nexport type SwatchPresetColor = { color: string; title?: string } | string;\nexport type SwatchRectRenderProps = {\n  key: string | number;\n  title: string;\n  color: string;\n  checked: boolean;\n  style: React.CSSProperties;\n  onClick: (evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\nexport interface SwatchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string;\n  colors?: SwatchPresetColor[];\n  rectProps?: React.HTMLAttributes<HTMLDivElement>;\n  rectRender?: (props: SwatchRectRenderProps) => JSX.Element;\n  onChange?: (hsva: HsvaColor) => void;\n  addonAfter?: React.ReactNode;\n  addonBefore?: React.ReactNode;\n}\n\nconst Swatch = React.forwardRef<HTMLDivElement, SwatchProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-swatch',\n    className,\n    color,\n    colors = [],\n    style,\n    rectProps = {},\n    onChange,\n    addonAfter,\n    addonBefore,\n    rectRender,\n    ...other\n  } = props;\n  const rectStyle: React.CSSProperties = {\n    background: 'rgb(144, 19, 254)',\n    height: 15,\n    width: 15,\n    marginRight: 5,\n    marginBottom: 5,\n    cursor: 'pointer',\n    position: 'relative',\n    outline: 'none',\n    borderRadius: 2,\n    ...rectProps.style,\n  };\n  const handleClick = (hex: string) => {\n    onChange && onChange(hexToHsva(hex));\n  };\n  return (\n    <div\n      ref={ref}\n      {...other}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        position: 'relative',\n        ...style,\n      }}\n    >\n      {addonBefore && React.isValidElement(addonBefore) && addonBefore}\n      {colors &&\n        Array.isArray(colors) &&\n        colors.map((item, idx) => {\n          let title = '';\n          let background = '';\n          if (typeof item === 'string') {\n            title = item;\n            background = item;\n          }\n          if (typeof item === 'object' && item.color) {\n            title = item.title || item.color;\n            background = item.color;\n          }\n          const checked = color && color.toLocaleLowerCase() === background.toLocaleLowerCase();\n          if (rectRender) {\n            return rectRender({\n              key: idx,\n              title,\n              color: background,\n              checked: !!checked,\n              style: { ...rectStyle, background },\n              onClick: () => handleClick(background),\n            });\n          }\n          const child =\n            rectProps.children && React.isValidElement(rectProps.children)\n              ? React.cloneElement(rectProps.children, {\n                  color: background,\n                  checked,\n                })\n              : null;\n          return (\n            <div\n              tabIndex={0}\n              key={idx}\n              title={title}\n              onClick={() => handleClick(background)}\n              {...rectProps}\n              children={child}\n              style={{ ...rectStyle, background }}\n            />\n          );\n        })}\n      {addonAfter && React.isValidElement(addonAfter) && addonAfter}\n    </div>\n  );\n});\n\nSwatch.displayName = 'Swatch';\n\nexport default Swatch;\n"],"names":["EditorUrl","editorUrl","className","styles","target","rel","href","Markdown","props","getMdStr","example","state","mdStr","this","then","str","setState","default","source","replace","style","padding","minHeight","src","alt","Component","Example","useContext","Context","hsva","dispatch","width","color","onChange","Page","EditableInputRGBA","prefixCls","placement","rProps","gProps","bProps","aProps","rgba","hsvaToRgba","value","Number","evn","handleChange","type","handleColor","rgbaToHsva","a","r","g","b","ref","fontSize","display","label","onBlur","val","marginLeft","parseInt","String","EditableInput","useState","isFocus","useRef","useEffect","setValue","placementStyle","position","alignItems","valInit","test","getNumberValue","isNaN","autoComplete","onFocus","paddingTop","paddingBottom","paddingLeft","paddingRight","boxSizing","border","boxShadow","textTransform","children","Hue","hue","direction","background","h","s","v","interaction","top","Pointer","left","useMemo","height","transform","borderRadius","backgroundColor","Saturation","radius","containerStyle","comProps","hsvaToHslaString","inset","cursor","backgroundImage","onMove","onDown","pointer","PRESET_COLORS","Bar","bottom","Sketch","presetColors","editableDisable","validHex","setHsva","hexToHsva","useCallback","hsv","newColor","marginTop","flex","innerProps","marginRight","newHue","newAlpha","bgProps","hsvaToRgbaString","margin","hsvaToHex","minWidth","result","borderTop","colors","hsvColor","rectProps","marginBottom","Swatch","rectRender","rectStyle","outline","handleClick","hex","flexWrap","addonBefore","React","Array","title","item","checked","key","onClick","child","tabIndex","addonAfter"],"sourceRoot":""}