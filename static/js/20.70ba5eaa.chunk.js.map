{"version":3,"sources":["../../src/Pointer.tsx","../../src/utils.ts","../../src/index.tsx","components/Markdown.tsx","components/Markdown.module.less","pages/wheel/index.tsx"],"names":["Pointer","prefixCls","styleWarp","position","top","left","useMemo","className","style","width","height","transform","boxShadow","borderRadius","backgroundColor","inset","color","TAU","Math","dist","x","y","getWheelDimensions","r","radius","cx","cy","getHandleRange","translateWheelAngle","props","wheelAngle","direction","invert","angle","Wheel","onChange","hsva","validHex","hexToHsva","hex","hsvaToHex","positions","handleRange","handleAngle","hsv","handleDist","getWheelHandlePosition","comProps","handleChange","interaction","result","hue","h","s","getWheelValueFromInput","handleHsva","v","a","handleColor","ref","onMove","onDown","pointer","zIndex","background","opacity","EditorUrl","editorUrl","styles","editor","target","rel","href","Markdown","getMdStr","example","state","mdStr","this","then","str","setState","default","warpper","markdown","source","replace","padding","minHeight","footer","src","alt","Component","module","exports","Example","useContext","Context","dispatch","Page"],"mappings":"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","file":"static/js/20.70ba5eaa.chunk.js","sourcesContent":["import React from 'react';\nimport { useMemo } from 'react';\n\nexport interface PointerProps extends React.HTMLAttributes<HTMLDivElement> {\n  prefixCls?: string;\n  top?: string;\n  left: string;\n  color?: string;\n}\n\nconst BOXSHADOW = 'rgb(255 255 255) 0px 0px 0px 1.5px, rgb(0 0 0 / 30%) 0px 0px 1px 1px inset, rgb(0 0 0 / 40%) 0px 0px 1px 2px';\n\nexport const Pointer = ({ className, color, left, top, style, prefixCls }: PointerProps): JSX.Element => {\n  const styleWarp: React.CSSProperties = {\n    ...style,\n    position: 'absolute',\n    top,\n    left,\n  };\n  return useMemo(\n    () => (\n      <div className={`${prefixCls}-pointer ${className || ''}`} style={styleWarp}>\n        <div\n          className={`${prefixCls}-fill`}\n          style={{\n            width: 10,\n            height: 10,\n            transform: 'translate(-5px, -5px)',\n            boxShadow: BOXSHADOW,\n            borderRadius: '50%',\n            backgroundColor: '#fff',\n          }}\n        >\n          <div\n            style={{\n              inset: 0,\n              borderRadius: '50%',\n              position: 'absolute',\n              backgroundColor: color,\n            }}\n          />\n        </div>\n      </div>\n    ),\n    [top, left, color, className, prefixCls],\n  );\n};\n","import { HsvColor } from '@uiw/color-convert';\nimport { WheelProps } from './';\n\nconst TAU = Math.PI * 2;\n\n/**\n * javascript's modulo operator doesn't produce positive numbers with negative input\n * https://www.geeksforgeeks.org/how-to-get-negative-result-using-modulo-operator-in-javascript/\n */\nexport const mod = (a: number, n: number) => ((a % n) + n) % n;\n\n/** distance between points (x, y) and (0, 0) */\nconst dist = (x: number, y: number) => Math.sqrt(x * x + y * y);\n\n/**\n * Get the point as the center of the wheel\n */\nexport function getWheelDimensions({ width = 0 }: Partial<WheelProps>) {\n  const r = width / 2;\n  return {\n    width,\n    radius: r,\n    cx: r,\n    cy: r,\n  };\n}\n\n/**\n * Returns true if point (x, y) lands inside the wheel\n */\nexport function isInputInsideWheel(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy, width } = getWheelDimensions(props);\n  const r = width / 2;\n  return dist(cx - x, cy - y) < r;\n}\n\n/**\n * Get the current handle position for a given color\n */\nexport function getWheelHandlePosition(props: Partial<WheelProps>, hsv: HsvColor) {\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = getHandleRange(props);\n  const handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (TAU / 360);\n  const handleDist = (hsv.s / 100) * handleRange;\n  const direction = props.direction === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction,\n  };\n}\n\n/**\n * Get Range\n */\nexport function getHandleRange({ width = 0 }: Partial<WheelProps>) {\n  return width / 2;\n}\n\n/**\n * Translate an angle according to wheelAngle and wheelDirection\n */\nexport function translateWheelAngle(props: Partial<WheelProps>, angle: number, invert?: boolean) {\n  const wheelAngle = props.angle || 0;\n  const direction = props.direction;\n  // inverted and clockwisee\n  if (invert && direction === 'clockwise') angle = wheelAngle + angle;\n  // clockwise (input handling)\n  else if (direction === 'clockwise') angle = 360 - wheelAngle + angle;\n  // inverted and anticlockwise\n  else if (invert && direction === 'anticlockwise') angle = wheelAngle + 180 - angle;\n  // anticlockwise (input handling)\n  else if (direction === 'anticlockwise') angle = wheelAngle - angle;\n  return mod(angle, 360);\n}\n\n/**\n * Get the current wheel value from user input\n * @param props - wheel props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getWheelValueFromInput(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = getHandleRange(props);\n  x = cx - x;\n  y = cy - y;\n  // Calculate the hue by converting the angle to radians\n  const hue = translateWheelAngle(props, Math.atan2(-y, -x) * (360 / TAU));\n  // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n  const handleDist = Math.min(dist(x, y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round((100 / handleRange) * handleDist),\n  };\n}\n","import React from 'react';\nimport { HsvaColor, ColorResult, validHex, hexToHsva, hsvaToHex, color as handleColor } from '@uiw/color-convert';\nimport Interactive, { Interaction } from '@uiw/react-drag-event-interactive';\nimport { Pointer, PointerProps } from './Pointer';\nimport { getWheelHandlePosition, getWheelValueFromInput } from './utils';\n\nexport interface WheelProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  width?: number;\n  height?: number;\n  radius?: React.CSSProperties['borderRadius'];\n  /** Starting angle of the color wheel's hue gradient, measured in degrees. */\n  angle?: number;\n  /** Direction of the color wheel's hue gradient; either clockwise or anticlockwise. Default: `anticlockwise` */\n  direction?: 'clockwise' | 'anticlockwise';\n  pointer?: ({ prefixCls, left, top, color }: PointerProps) => JSX.Element;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst HUE_GRADIENT_CLOCKWISE = 'conic-gradient(red, yellow, lime, aqua, blue, magenta, red)';\nconst HUE_GRADIENT_ANTICLOCKWISE = 'conic-gradient(red, magenta, blue, aqua, lime, yellow, red)';\n\nconst Wheel = React.forwardRef<HTMLDivElement, WheelProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-wheel',\n    radius = 0,\n    pointer,\n    className,\n    style,\n    width = 200,\n    height = 200,\n    direction = 'anticlockwise',\n    angle = 180,\n    color,\n    onChange,\n    ...other\n  } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {}) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva) : '';\n  const positions = getWheelHandlePosition({ width }, hsva);\n  const comProps = {\n    top: '0',\n    left: '0',\n    color: hex,\n  };\n  const handleChange = (interaction: Interaction, event: MouseEvent | TouchEvent) => {\n    const result = getWheelValueFromInput({ width }, width - interaction.x, height - interaction.y);\n    const handleHsva = {\n      h: result.h,\n      s: result.s,\n      v: hsva.v,\n      a: hsva.a,\n    };\n    onChange && onChange(handleColor(handleHsva));\n  };\n  return (\n    <Interactive\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        ...style,\n        position: 'relative',\n        width,\n        height,\n      }}\n      ref={ref}\n      onMove={handleChange}\n      onDown={handleChange}\n    >\n      {React.createElement(pointer || Pointer, {\n        prefixCls,\n        style: {\n          zIndex: 1,\n          transform: `translate(${positions.x}px, ${positions.y}px)`,\n        },\n        ...comProps,\n      })}\n      <div\n        style={{\n          position: 'absolute',\n          borderRadius: '50%',\n          background: direction === 'anticlockwise' ? HUE_GRADIENT_CLOCKWISE : HUE_GRADIENT_ANTICLOCKWISE,\n          transform: `rotateZ(${angle + 90}deg)`,\n          inset: 0,\n        }}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          borderRadius: '50%',\n          background: 'radial-gradient(circle closest-side, #fff, transparent)',\n          inset: 0,\n        }}\n      />\n      <div\n        style={{\n          backgroundColor: '#000',\n          borderRadius: '50%',\n          position: 'absolute',\n          inset: 0,\n          opacity: typeof hsva.v === 'number' ? 1 - hsva.v / 100 : 0,\n        }}\n      />\n    </Interactive>\n  );\n});\n\nWheel.displayName = 'Wheel';\n\nexport default Wheel;\n","import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright © 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"Markdown_markdown__2igKS\",\"editor\":\"Markdown_editor___Td2W\",\"warpper\":\"Markdown_warpper__1Ekz5\",\"example\":\"Markdown_example__3LCkn\",\"footer\":\"Markdown_footer__2D6Vq\"};","import { useContext } from 'react';\nimport Wheel from '@uiw/react-color-wheel';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <Wheel\n        color={hsva}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsva } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-wheel/README.md';\n  getMdStr = () => import('@uiw/react-color-wheel/README.md');\n  example = (<Example />);\n}\n"],"sourceRoot":""}