{"version":3,"sources":["components/Markdown.tsx","components/Markdown.module.less","../../src/index.tsx","pages/shade-slider/index.tsx"],"names":["Markdown","props","editorUrl","getMdStr","example","state","mdStr","this","then","str","setState","default","className","styles","warpper","markdown","source","replace","style","padding","footer","href","target","src","alt","Component","module","exports","ShadeSlider","prefixCls","onChange","direction","hsva","colorFrom","hsvaToHslaString","Object","a","s","v","ref","h","background","interaction","Example","useContext","Context","dispatch","width","newShade","Page"],"mappings":"iNASqBA,E,kDACnB,WAAYC,GAAuB,IAAD,8BAChC,cAAMA,IAKRC,eANkC,IAOlCC,cAPkC,IAQlCC,aARkC,EAEhC,EAAKC,MAAQ,CACXC,MAAO,IAHuB,E,qDASlC,WAAqB,IAAD,OACdC,KAAKJ,UACPI,KAAKJ,WAAWK,MAAK,SAACC,GACpB,EAAKC,SAAS,CACZJ,MAAOG,EAAIE,SAAWF,S,oBAK9B,WACE,OACE,sBAAKG,UAAWC,IAAOC,QAAvB,UACE,sBAAKF,UAAWC,IAAOE,SAAvB,UACGR,KAAKH,SAAW,qBAAKQ,UAAWC,IAAOT,QAAvB,SAAiCG,KAAKH,UACvD,cAAC,IAAD,CAAiBY,OAAQT,KAAKF,MAAMC,MAAMW,QAAQ,2BAA4B,IAAKC,MAAO,CAAEC,QAAS,kBAEvG,sBAAKP,UAAWC,IAAOO,OAAvB,UACE,mBAAGC,KAAK,0EAA0EC,OAAO,UAAzF,SACE,qBAAKC,IAAI,oDAAoDC,IAAI,oBAEnE,mBAAGH,KAAK,8CAA8CC,OAAO,UAA7D,SACE,qBAAKC,IAAI,yDAAyDC,IAAI,oBAExE,mBAAGH,KAAK,kDAAkDC,OAAO,UAAjE,SACE,qBAAKC,IAAI,4DAA4DC,IAAI,mBAE3E,mBAAGH,KAAK,gDAAgDC,OAAO,UAA/D,SACE,qBAAKC,IAAI,8DAA8DC,IAAI,qBAE7E,mBAAGH,KAAK,uCAAuCC,OAAO,UAAtD,SACE,qBAAKC,IAAI,0CAA0CC,IAAI,kBAEzD,mBAAGH,KAAK,iDAAiDC,OAAO,UAAhE,SACE,qBAAKC,IAAI,oDAAoDC,IAAI,UAEnE,oDACmB,IACjB,mBAAGH,KAAK,2BAA2BC,OAAO,UAA1C,mBAFF,sC,GA7C4BG,c,mBCRtCC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,2B,2PCOnIC,EAAc,gBAAmD,cACrE,QAAQC,iBAAR,MAAM,qBAAN,EAAM,EAAN,EAAM,YAAN,EAAqDC,SAArD,IAA+DC,iBAA/D,MAAM,aAAN,EAAyFC,EAAzF,EAAyFA,KAAzF,WACMC,EAAYC,YAAiBC,OAAA,YAAwB,CAAEC,EAAF,EAAQC,EAAR,IAAgBC,EAAG,OAC9E,OACE,uBACEC,IAAKA,GADP,GAGE3B,UAAciB,EAAL,KAAkBjB,GAH7B,IAIEoB,KAAM,CAAEQ,EAAGR,EAAL,EAAaK,EAAb,IAAqBC,EAAGN,EAAxB,EAAgCI,EAAG,EAAIJ,IAAS,KACtDD,UALF,EAMEU,WAAU,uBAAwBV,yBAAxB,iBANZ,kBAOED,SAAU,cACRA,GACEA,EAAS,CAAEQ,EAAGP,iBAA6B,IAA7BA,IAAmCW,OAAyB,IAAjE,IAAuEA,MAAuBL,EAAG,aAMpHT,4BAEA,Q,eCxBA,SAASe,IACP,MAA2BC,qBAAWC,KAA9Bb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,SACd,OACE,qBAAK5B,MAAO,CAAE6B,MAAO,KAArB,SACE,cAAC,EAAD,CACEf,KAAMA,EACNF,SAAU,SAACkB,GACTF,EAAU,CAAEd,KAAK,2BAAMA,GAASgB,U,IAOrBC,E,4MACnB/C,UAAY,yC,EACZC,SAAW,kBAAM,gC,EACjBC,QAAW,cAACuC,EAAD,I,yBAHqB3C","file":"static/js/25.5bed37e3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')} style={{ padding: '20px 26px' }} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright Â© 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"Markdown_markdown__2igKS\",\"warpper\":\"Markdown_warpper__1Ekz5\",\"example\":\"Markdown_example__3LCkn\",\"footer\":\"Markdown_footer__2D6Vq\"};","import React from 'react';\nimport { hsvaToHslaString } from '@uiw/color-convert';\nimport Alpha, { AlphaProps } from '@uiw/react-color-alpha';\n\nexport interface ShadeSliderProps extends Omit<AlphaProps, 'onChange'> {\n  onChange?: (newShade: { v: number; s: number }) => void;\n}\n\nconst ShadeSlider = React.forwardRef<HTMLDivElement, ShadeSliderProps>((props, ref) => {\n  const { prefixCls = 'w-color-saturation', className, onChange, direction = 'horizontal', hsva, ...other } = props;\n  const colorFrom = hsvaToHslaString(Object.assign({}, hsva, { a: 1, s: 100, v: 100 }));\n  return (\n    <Alpha\n      ref={ref}\n      {...other}\n      className={`${prefixCls} ${className || ''}`}\n      hsva={{ h: hsva.h, s: 100, v: hsva.v, a: 1 - hsva.v / 100 }}\n      direction={direction}\n      background={`linear-gradient(to ${direction === 'horizontal' ? 'right' : 'bottom'}, ${colorFrom}, rgb(0, 0, 0))`}\n      onChange={(_, interaction) => {\n        onChange &&\n          onChange({ v: direction === 'horizontal' ? 100 - interaction.left * 100 : 100 - interaction.top * 100, s: 100 });\n      }}\n    />\n  );\n});\n\nShadeSlider.displayName = 'ShadeSlider';\n\nexport default ShadeSlider;\n","import { useContext } from 'react';\nimport ShadeSlider from '@uiw/react-color-shade-slider';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <ShadeSlider\n        hsva={hsva}\n        onChange={(newShade) => {\n          dispatch!({ hsva: { ...hsva, ...newShade } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-shade-slider/README.md';\n  getMdStr = () => import('@uiw/react-color-shade-slider/README.md');\n  example = (<Example />);\n}\n"],"sourceRoot":""}