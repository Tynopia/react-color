{"version":3,"sources":["components/Markdown.tsx","components/Markdown.module.less","../../src/index.tsx","pages/slider/index.tsx"],"names":["EditorUrl","editorUrl","className","styles","editor","target","rel","href","Markdown","props","getMdStr","example","state","mdStr","this","then","str","setState","default","warpper","markdown","source","replace","style","padding","minHeight","footer","src","alt","Component","module","exports","Slider","prefixCls","lightness","hsva","color","validHex","hexToHsva","ref","display","hslStr","hsvaToHsla","checked","hsvaToHslString","paddingLeft","width","boxSizing","onClick","evn","onChange","handleColor","hslStringToHsva","handleClick","backgroundColor","height","cursor","borderRadius","transform","Example","useContext","Context","dispatch","hsv","Page"],"mappings":"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","file":"static/js/26.e0864fde.chunk.js","sourcesContent":["import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright Â© 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"Markdown_markdown__2igKS\",\"editor\":\"Markdown_editor___Td2W\",\"warpper\":\"Markdown_warpper__1Ekz5\",\"example\":\"Markdown_example__3LCkn\",\"footer\":\"Markdown_footer__2D6Vq\"};","import React from 'react';\nimport {\n  ColorResult,\n  color as handleColor,\n  hexToHsva,\n  hsvaToHsla,\n  hsvaToHslString,\n  validHex,\n  HsvaColor,\n  hslStringToHsva,\n} from '@uiw/color-convert';\n\nexport interface SliderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  lightness?: number[];\n  onChange?: (color: ColorResult, evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Slider = React.forwardRef<HTMLDivElement, SliderProps>((props, ref) => {\n  const { prefixCls = 'w-color-slider', className, style, onChange, color, lightness = [80, 65, 50, 35, 20], ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {}) as HsvaColor;\n  const handleClick = (hslStr: string, evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    onChange && onChange(handleColor(hslStringToHsva(hslStr)), evn);\n  };\n  return (\n    <div\n      ref={ref}\n      style={{ display: 'flex', ...style }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    >\n      {lightness.map((num, idx) => {\n        const hsl = hsvaToHsla(hsva);\n        const hslStr = `hsl(${hsl.h}, 50%, ${num}%)`;\n        const checked = hslStr === hsvaToHslString(hsva);\n        return (\n          <div\n            key={idx}\n            style={{\n              paddingLeft: 1,\n              width: `${100 / lightness.length}%`,\n              boxSizing: 'border-box',\n            }}\n          >\n            <div\n              onClick={(evn) => handleClick(hslStr, evn)}\n              style={{\n                backgroundColor: hslStr,\n                height: 12,\n                cursor: 'pointer',\n                ...(checked\n                  ? {\n                      borderRadius: 2,\n                      transform: 'scale(1, 1.5)',\n                    }\n                  : {}),\n              }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n","import { useContext } from 'react';\nimport Slider from '@uiw/react-color-slider';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <Slider\n        color={hsva}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsv } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-slider/README.md';\n  getMdStr = () => import('@uiw/react-color-slider/README.md');\n  example = (<Example />);\n}\n"],"sourceRoot":""}