{"version":3,"file":"static/js/917.2a18e3ee.chunk.js","mappings":"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","sources":["webpack://website/./src/components/Markdown.module.less?7236","components/Markdown.tsx","pages/compact/index.tsx","../../packages/color-compact/src/index.tsx","../../packages/color-convert/src/getContrastingColor.ts","../../packages/color-editable-input-rgba/src/index.tsx","../../packages/color-editable-input/src/index.tsx","../../packages/color-swatch/src/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"Markdown_markdown__pdFcg\",\"editor\":\"Markdown_editor__ktea2\",\"warpper\":\"Markdown_warpper__j-FaN\",\"example\":\"Markdown_example__q3W5x\",\"footer\":\"Markdown_footer__ShQo5\"};","import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright © 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useContext } from 'react';\nimport Compact from '@uiw/react-color-compact';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <Compact\n        color={hsva}\n        style={{\n          boxShadow: 'rgb(0 0 0 / 15%) 0px 0px 0px 1px, rgb(0 0 0 / 15%) 0px 8px 16px',\n        }}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsva } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-compact/README.md';\n  getMdStr = () => import('@uiw/react-color-compact/README.md');\n  example = (<Example />);\n}\n","import React, { useCallback } from 'react';\nimport {\n  ColorResult,\n  color as handleColor,\n  hexToHsva,\n  validHex,\n  HsvaColor,\n  hsvaToHex,\n  getContrastingColor,\n} from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\nimport Swatch from '@uiw/react-color-swatch';\n\nexport interface CompactProps<T> extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  colors?: string[];\n  onChange?: (color: ColorResult, evn?: T) => void;\n}\n\nconst COLORS = [\n  '#4D4D4D',\n  '#999999',\n  '#FFFFFF',\n  '#F44E3B',\n  '#FE9200',\n  '#FCDC00',\n  '#DBDF00',\n  '#A4DD00',\n  '#68CCCA',\n  '#73D8FF',\n  '#AEA1FF',\n  '#FDA1FF',\n  '#333333',\n  '#808080',\n  '#cccccc',\n  '#D33115',\n  '#E27300',\n  '#FCC400',\n  '#B0BC00',\n  '#68BC00',\n  '#16A5A5',\n  '#009CE0',\n  '#7B64FF',\n  '#FA28FF',\n  '#000000',\n  '#666666',\n  '#B3B3B3',\n  '#9F0500',\n  '#C45100',\n  '#FB9E00',\n  '#808900',\n  '#194D33',\n  '#0C797D',\n  '#0062B1',\n  '#653294',\n  '#AB149E',\n];\n\nfunction Point(props: { color?: string; checked?: boolean }) {\n  if (!props.checked) return null;\n  return (\n    <div\n      style={{\n        height: 5,\n        width: 5,\n        borderRadius: '50%',\n        backgroundColor: getContrastingColor(props.color!),\n      }}\n    />\n  );\n}\n\nconst Compact = React.forwardRef<HTMLDivElement, CompactProps<React.MouseEvent<HTMLDivElement, MouseEvent>>>((props, ref) => {\n  const { prefixCls = 'w-color-compact', className, style, onChange, color, colors = COLORS, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva).replace(/^#/, '') : '';\n  const handleChangeCallback = useCallback((hsv: HsvaColor) => onChange && onChange(handleColor(hsv)), []);\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      handleChangeCallback(hexToHsva(value));\n    }\n  };\n  const rgbProps = {\n    style: {\n      alignItems: 'baseline',\n    },\n    inputStyle: { boxShadow: 'none', backgroundColor: 'transparent', outline: 0 },\n  };\n  return (\n    <div\n      ref={ref}\n      style={{\n        background: '#f6f6f6',\n        borderRadius: 3,\n        display: 'flex',\n        width: 240,\n        flexWrap: 'wrap',\n        paddingTop: 5,\n        paddingLeft: 5,\n        ...style,\n      }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    >\n      <Swatch\n        colors={colors}\n        color={color ? hsvaToHex(hsva) : undefined}\n        rectProps={{\n          children: <Point />,\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        }}\n        onChange={(hsvColor) => handleChangeCallback(hsvColor)}\n      />\n      <div style={{ display: 'flex', margin: '0 4px 3px 0' }}>\n        <EditableInput\n          onChange={(evn, val) => handleHex(val, evn)}\n          labelStyle={{ paddingRight: 5, marginTop: -1 }}\n          value={hex.toLocaleUpperCase()}\n          label={<div style={{ width: 8, height: 8, backgroundColor: `#${hex}` }} />}\n          inputStyle={{\n            outline: 'none',\n            boxShadow: 'initial',\n            background: 'transparent',\n          }}\n          style={{\n            flexDirection: 'row-reverse',\n            flex: '1 1 0%',\n            minWidth: 80,\n          }}\n        />\n        <RGBA\n          hsva={hsva}\n          placement=\"left\"\n          onChange={(result) => handleChangeCallback(result.hsva)}\n          aProps={false}\n          rProps={rgbProps}\n          gProps={rgbProps}\n          bProps={rgbProps}\n        />\n      </div>\n    </div>\n  );\n});\n\nCompact.displayName = 'Compact';\n\nexport default Compact;\n","import { HsvaColor, color } from './';\n\nexport const getContrastingColor = (str: string | HsvaColor) => {\n  if (!str) {\n    return '#fff';\n  }\n  const col = color(str);\n  const yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n  return yiq >= 128 ? '#000' : '#fff';\n};\n","import React from 'react';\nimport EditableInput, { EditableInputProps } from '@uiw/react-color-editable-input';\nimport { HsvaColor, color as handleColor, RgbaColor, ColorResult, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputRGBAProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  hsva: HsvaColor;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  rProps?: EditableInputProps;\n  gProps?: EditableInputProps;\n  bProps?: EditableInputProps;\n  aProps?: false | EditableInputProps;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst EditableInputRGBA = React.forwardRef<HTMLDivElement, EditableInputRGBAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n  const rgba = (hsva ? hsvaToRgba(hsva) : {}) as RgbaColor;\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    const value = Number(evn.target.value);\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n  const handleChange = (value: string | number, type: 'r' | 'g' | 'b' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, a: value / 100 })));\n      }\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, r: value })));\n      }\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, g: value })));\n      }\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, b: value })));\n      }\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        fontSize: 11,\n        display: 'flex',\n        ...style,\n      }}\n    >\n      <EditableInput\n        label=\"R\"\n        value={rgba.r || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'r', evn)}\n        {...rProps}\n        style={{ ...rProps.style }}\n      />\n      <EditableInput\n        label=\"G\"\n        value={rgba.g || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'g', evn)}\n        {...gProps}\n        style={{ marginLeft: 5, ...rProps.style }}\n      />\n      <EditableInput\n        label=\"B\"\n        value={rgba.b || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'b', evn)}\n        {...bProps}\n        style={{ marginLeft: 5, ...bProps.style }}\n      />\n      {aProps && (\n        <EditableInput\n          label=\"A\"\n          value={rgba.a ? parseInt(String(rgba.a * 100), 10) : 0}\n          onBlur={handleBlur}\n          placement={placement}\n          onChange={(evn, val) => handleChange(val, 'a', evn)}\n          {...aProps}\n          style={{ marginLeft: 5, ...aProps.style }}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInputRGBA.displayName = 'EditableInputRGBA';\n\nexport default EditableInputRGBA;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n\nconst validHex = (hex: string): boolean => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);\nconst getNumberValue = (value: string) => Number(String(value).replace(/%/g, ''));\n\nexport interface EditableInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  prefixCls?: string;\n  value?: string | number;\n  label?: React.ReactNode;\n  labelStyle?: React.CSSProperties;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  inputStyle?: React.CSSProperties;\n  onChange?: (evn: React.ChangeEvent<HTMLInputElement>, value: string | number) => void;\n}\n\nconst EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input',\n    placement = 'bottom',\n    label,\n    value: initValue,\n    className,\n    style,\n    labelStyle,\n    inputStyle,\n    onChange,\n    onBlur,\n    ...other\n  } = props;\n  const [value, setValue] = useState<string | number | undefined>(initValue);\n  const isFocus = useRef(false);\n\n  useEffect(() => {\n    if (props.value !== value) {\n      if (!isFocus.current) {\n        setValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  function handleChange(evn: React.FocusEvent<HTMLInputElement>, valInit?: string) {\n    const value = valInit || evn.target.value;\n    if (validHex(value)) {\n      onChange && onChange(evn, value);\n    }\n    const val = getNumberValue(value);\n    if (!isNaN(val)) {\n      onChange && onChange(evn, val);\n    }\n    setValue(value);\n    // setValueProps(value);\n  }\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    isFocus.current = false;\n    setValue(props.value);\n    onBlur && onBlur(evn);\n  }\n  const placementStyle: React.CSSProperties = {};\n  if (placement === 'bottom') {\n    placementStyle['flexDirection'] = 'column';\n  }\n  if (placement === 'top') {\n    placementStyle['flexDirection'] = 'column-reverse';\n  }\n  if (placement === 'left') {\n    placementStyle['flexDirection'] = 'row-reverse';\n  }\n  return (\n    <div\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        position: 'relative',\n        alignItems: 'center',\n        display: 'flex',\n        fontSize: 11,\n        ...placementStyle,\n        ...style,\n      }}\n    >\n      <input\n        ref={ref}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        onFocus={() => (isFocus.current = true)}\n        {...other}\n        style={{\n          width: '100%',\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 3,\n          paddingRight: 3,\n          fontSize: 11,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: 'rgb(204 204 204) 0px 0px 0px 1px inset',\n          ...inputStyle,\n        }}\n      />\n      {label && (\n        <span\n          style={{\n            color: 'rgb(153, 153, 153)',\n            textTransform: 'capitalize',\n            ...labelStyle,\n          }}\n          children={label}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInput.displayName = 'EditableInput';\n\nexport default EditableInput;\n","import React from 'react';\nimport { HsvaColor, hexToHsva } from '@uiw/color-convert';\n\nexport type SwatchPresetColor = { color: string; title?: string } | string;\nexport type SwatchRectRenderProps = {\n  key: string | number;\n  title: string;\n  color: string;\n  checked: boolean;\n  style: React.CSSProperties;\n  onClick: (evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\nexport interface SwatchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string;\n  colors?: SwatchPresetColor[];\n  rectProps?: React.HTMLAttributes<HTMLDivElement>;\n  rectRender?: (props: SwatchRectRenderProps) => JSX.Element;\n  onChange?: (hsva: HsvaColor) => void;\n  addonAfter?: React.ReactNode;\n  addonBefore?: React.ReactNode;\n}\n\nconst Swatch = React.forwardRef<HTMLDivElement, SwatchProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-swatch',\n    className,\n    color,\n    colors = [],\n    style,\n    rectProps = {},\n    onChange,\n    addonAfter,\n    addonBefore,\n    rectRender,\n    ...other\n  } = props;\n  const rectStyle: React.CSSProperties = {\n    background: 'rgb(144, 19, 254)',\n    height: 15,\n    width: 15,\n    marginRight: 5,\n    marginBottom: 5,\n    cursor: 'pointer',\n    position: 'relative',\n    outline: 'none',\n    borderRadius: 2,\n    ...rectProps.style,\n  };\n  const handleClick = (hex: string) => {\n    onChange && onChange(hexToHsva(hex));\n  };\n  return (\n    <div\n      ref={ref}\n      {...other}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        position: 'relative',\n        ...style,\n      }}\n    >\n      {addonBefore && React.isValidElement(addonBefore) && addonBefore}\n      {colors &&\n        Array.isArray(colors) &&\n        colors.map((item, idx) => {\n          let title = '';\n          let background = '';\n          if (typeof item === 'string') {\n            title = item;\n            background = item;\n          }\n          if (typeof item === 'object' && item.color) {\n            title = item.title || item.color;\n            background = item.color;\n          }\n          const checked = color && color.toLocaleLowerCase() === background.toLocaleLowerCase();\n          if (rectRender) {\n            return rectRender({\n              key: idx,\n              title,\n              color: background,\n              checked: !!checked,\n              style: { ...rectStyle, background },\n              onClick: () => handleClick(background),\n            });\n          }\n          const child =\n            rectProps.children && React.isValidElement(rectProps.children)\n              ? React.cloneElement(rectProps.children, {\n                  color: background,\n                  checked,\n                })\n              : null;\n          return (\n            <div\n              tabIndex={0}\n              key={idx}\n              title={title}\n              onClick={() => handleClick(background)}\n              {...rectProps}\n              children={child}\n              style={{ ...rectStyle, background }}\n            />\n          );\n        })}\n      {addonAfter && React.isValidElement(addonAfter) && addonAfter}\n    </div>\n  );\n});\n\nSwatch.displayName = 'Swatch';\n\nexport default Swatch;\n"],"names":["EditorUrl","editorUrl","className","styles","target","rel","href","Markdown","props","getMdStr","example","state","mdStr","this","then","str","setState","default","source","replace","style","padding","minHeight","src","alt","Component","Example","useContext","Context","hsva","dispatch","width","color","boxShadow","onChange","Page","COLORS","Point","height","borderRadius","backgroundColor","getContrastingColor","Compact","prefixCls","colors","validHex","hexToHsva","hex","hsvaToHex","handleChangeCallback","useCallback","hsv","handleColor","rgbProps","alignItems","inputStyle","outline","ref","background","display","flexWrap","paddingTop","paddingLeft","rectProps","children","justifyContent","hsvColor","margin","value","val","test","String","labelStyle","paddingRight","marginTop","label","flexDirection","flex","minWidth","placement","result","aProps","rProps","gProps","bProps","col","yiq","EditableInputRGBA","rgba","hsvaToRgba","Number","evn","handleChange","type","rgbaToHsva","a","r","g","b","fontSize","onBlur","marginLeft","parseInt","EditableInput","useState","isFocus","useRef","useEffect","setValue","placementStyle","position","valInit","getNumberValue","isNaN","autoComplete","onFocus","paddingBottom","boxSizing","border","textTransform","Swatch","rectRender","rectStyle","marginRight","marginBottom","cursor","handleClick","addonBefore","React","Array","title","item","checked","key","onClick","child","tabIndex","addonAfter"],"sourceRoot":""}