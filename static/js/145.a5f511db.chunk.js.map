{"version":3,"file":"static/js/145.a5f511db.chunk.js","mappings":"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","sources":["../../node_modules/@babel/standalone|sync","webpack://website/./src/components/Markdown.module.less?7236","components/MarkdownPreview.tsx","components/Markdown.tsx","../../packages/color-slider/src/index.tsx","pages/slider/index.tsx"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 363;\nmodule.exports = webpackEmptyContext;","// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"Markdown_markdown__pdFcg\",\"editor\":\"Markdown_editor__ktea2\",\"warpper\":\"Markdown_warpper__j-FaN\",\"example\":\"Markdown_example__q3W5x\",\"footer\":\"Markdown_footer__ShQo5\"};","import MarkdownPreview from '@uiw/react-markdown-preview';\nimport CodeLayout from 'react-code-preview-layout';\nimport { getCodeString } from 'rehype-rewrite';\nimport { getMetaId, isMeta, getURLParameters, CodeBlockData } from 'markdown-react-code-preview-loader';\n\nexport default function Preview(data: CodeBlockData) {\n  return (\n    <MarkdownPreview\n      disableCopy={true}\n      source={data.source}\n      style={{ padding: '20px 26px', minHeight: 120 }}\n      components={{\n        code: ({ inline, node, ...props }) => {\n          const { 'data-meta': meta, ...rest } = props as any;\n          if (inline || !isMeta(meta)) {\n            return <code {...props} />;\n          }\n          const line = node.position?.start.line;\n          const metaId = getMetaId(meta) || String(line);\n          const Child = data.components[`${metaId}`];\n          if (metaId && typeof Child === 'function') {\n            const code = getCodeString(node.children);\n            const param = getURLParameters(meta);\n            return (\n              <CodeLayout toolbar={param.title || 'Example Display'} code={<code {...rest} />} text={code}>\n                <Child />\n              </CodeLayout>\n            );\n          }\n          return <code {...rest} />;\n        },\n      }}\n    />\n  );\n}\n","import { Component } from 'react';\nimport { CodeBlockData } from 'markdown-react-code-preview-loader';\nimport '@wcj/dark-mode';\nimport styles from './Markdown.module.less';\nimport Preview from './MarkdownPreview';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n  mdObj?: CodeBlockData;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default.source,\n          mdObj: str.default,\n        });\n      });\n    }\n  }\n  render() {\n    const { source, components, data } = this.state.mdObj || {};\n    return (\n      <div className={[styles.warpper, 'wmde-markdown-var'].join(' ')}>\n        <dark-mode light=\"Dark\" dark=\"Light\"></dark-mode>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <Preview source={source || ''} components={components || {}} data={data || {}} />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright Â© 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  ColorResult,\n  color as handleColor,\n  hexToHsva,\n  hsvaToHsla,\n  hsvaToHslString,\n  validHex,\n  HsvaColor,\n  hslStringToHsva,\n} from '@uiw/color-convert';\n\nexport interface SliderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  lightness?: number[];\n  onChange?: (color: ColorResult, evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Slider = React.forwardRef<HTMLDivElement, SliderProps>((props, ref) => {\n  const { prefixCls = 'w-color-slider', className, style, onChange, color, lightness = [80, 65, 50, 35, 20], ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || {}) as HsvaColor;\n  const handleClick = (hslStr: string, evn: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    onChange && onChange(handleColor(hslStringToHsva(hslStr)), evn);\n  };\n  return (\n    <div\n      ref={ref}\n      style={{ display: 'flex', ...style }}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n    >\n      {lightness.map((num, idx) => {\n        const hsl = hsvaToHsla(hsva);\n        const hslStr = `hsl(${hsl.h}, 50%, ${num}%)`;\n        const checked = hslStr === hsvaToHslString(hsva);\n        return (\n          <div\n            key={idx}\n            style={{\n              paddingLeft: 1,\n              width: `${100 / lightness.length}%`,\n              boxSizing: 'border-box',\n            }}\n          >\n            <div\n              onClick={(evn) => handleClick(hslStr, evn)}\n              style={{\n                backgroundColor: hslStr,\n                height: 12,\n                cursor: 'pointer',\n                ...(checked\n                  ? {\n                      borderRadius: 2,\n                      transform: 'scale(1, 1.5)',\n                    }\n                  : {}),\n              }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n","import { useContext } from 'react';\nimport Slider from '@uiw/react-color-slider';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <Slider\n        color={hsva}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsv } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-slider/README.md';\n  getMdStr = () => import('@uiw/react-color-slider/README.md');\n  example = (<Example />);\n}\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Preview","data","disableCopy","source","style","padding","minHeight","components","inline","node","props","meta","rest","isMeta","line","position","start","metaId","getMetaId","String","Child","getCodeString","children","param","getURLParameters","toolbar","title","text","EditorUrl","editorUrl","className","styles","target","rel","href","Markdown","getMdStr","example","state","mdStr","this","then","str","setState","default","mdObj","join","light","dark","src","alt","Component","Slider","React","ref","prefixCls","onChange","color","lightness","other","hsva","validHex","hexToHsva","_jsx","display","filter","Boolean","map","num","idx","hslStr","hsvaToHsla","h","checked","hsvaToHslString","paddingLeft","width","length","boxSizing","onClick","evn","handleColor","hslStringToHsva","handleClick","backgroundColor","height","cursor","borderRadius","transform","displayName","Example","useContext","Context","dispatch","hsv","Page"],"sourceRoot":""}