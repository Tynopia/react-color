{"version":3,"file":"static/js/773.7aa80a43.chunk.js","mappings":"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","sources":["webpack://website/./src/components/Markdown.module.less?7236","components/Markdown.tsx","pages/material/index.tsx","../../packages/color-editable-input-rgba/src/index.tsx","../../packages/color-editable-input/src/index.tsx","../../packages/color-material/src/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"Markdown_markdown__pdFcg\",\"editor\":\"Markdown_editor__ktea2\",\"warpper\":\"Markdown_warpper__j-FaN\",\"example\":\"Markdown_example__q3W5x\",\"footer\":\"Markdown_footer__ShQo5\"};","import { Component } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport styles from './Markdown.module.less';\n\ninterface MarkdownProps {}\ninterface MarkdownState {\n  mdStr: string;\n}\n\nconst EditorUrl = ({ editorUrl }: { editorUrl?: string }) => {\n  return editorUrl ? (\n    <a\n      className={styles.editor}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/uiwjs/react-color/edit/main${editorUrl}`}\n    >\n      Edit this page\n    </a>\n  ) : null;\n};\n\nexport default class Markdown extends Component<MarkdownProps, MarkdownState> {\n  constructor(props: MarkdownProps) {\n    super(props);\n    this.state = {\n      mdStr: '',\n    };\n  }\n  editorUrl?: string;\n  getMdStr?: any;\n  example?: React.ReactNode;\n  componentDidMount() {\n    if (this.getMdStr) {\n      this.getMdStr().then((str: any) => {\n        this.setState({\n          mdStr: str.default || str,\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div className={styles.warpper}>\n        <div className={styles.markdown}>\n          <EditorUrl editorUrl={this.editorUrl} />\n          {this.example && <div className={styles.example}>{this.example}</div>}\n          <MarkdownPreview\n            source={this.state.mdStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n            style={{ padding: '20px 26px', minHeight: 120 }}\n          />\n          <EditorUrl editorUrl={this.editorUrl} />\n        </div>\n        <div className={styles.footer}>\n          <a href=\"https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-color/file/README.md\" target=\"__blank\">\n            <img src=\"https://img.shields.io/badge/Open%20in-unpkg-blue\" alt=\"Open in unpkg\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/issues\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/issues/uiwjs/react-color\" alt=\"Github Issues\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/stargazers\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/stars/uiwjs/react-color.svg\" alt=\"Github Stars\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color/releases\" target=\"__blank\">\n            <img src=\"https://img.shields.io/github/release/uiwjs/react-color.svg\" alt=\"Github Release\" />\n          </a>\n          <a href=\"https://github.com/uiwjs/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/dub/l/vibe-d.svg\" alt=\"License MIT\" />\n          </a>\n          <a href=\"https://www.npmjs.com/package/@uiw/react-color\" target=\"__blank\">\n            <img src=\"https://img.shields.io/npm/v/@uiw/react-color.svg\" alt=\"npm\" />\n          </a>\n          <p>\n            Copyright © 2021{' '}\n            <a href=\"https://github.com/uiwjs\" target=\"__blank\">\n              uiwjs\n            </a>\n            . All rights reserved.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useContext } from 'react';\nimport Material from '@uiw/react-color-material';\nimport Markdown from '../../components/Markdown';\nimport { Context } from '../../Store';\n\nfunction Example() {\n  const { hsva, dispatch } = useContext(Context);\n  return (\n    <div style={{ width: 256 }}>\n      <Material\n        color={hsva}\n        onChange={(color) => {\n          dispatch!({ hsva: { ...hsva, ...color.hsva } });\n        }}\n      />\n    </div>\n  );\n}\n\nexport default class Page extends Markdown {\n  editorUrl = '/packages/color-material/README.md';\n  getMdStr = () => import('@uiw/react-color-material/README.md');\n  example = (<Example />);\n}\n","import React from 'react';\nimport EditableInput, { EditableInputProps } from '@uiw/react-color-editable-input';\nimport { HsvaColor, color as handleColor, RgbaColor, ColorResult, hsvaToRgba, rgbaToHsva } from '@uiw/color-convert';\n\nexport interface EditableInputRGBAProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  prefixCls?: string;\n  hsva: HsvaColor;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  rProps?: EditableInputProps;\n  gProps?: EditableInputProps;\n  bProps?: EditableInputProps;\n  aProps?: false | EditableInputProps;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst EditableInputRGBA = React.forwardRef<HTMLDivElement, EditableInputRGBAProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input-rgba',\n    hsva,\n    placement = 'bottom',\n    rProps = {},\n    gProps = {},\n    bProps = {},\n    aProps = {},\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n  const rgba = (hsva ? hsvaToRgba(hsva) : {}) as RgbaColor;\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    const value = Number(evn.target.value);\n    if (value && value > 255) {\n      evn.target.value = '255';\n    }\n    if (value && value < 0) {\n      evn.target.value = '0';\n    }\n  }\n  const handleChange = (value: string | number, type: 'r' | 'g' | 'b' | 'a', evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'number') {\n      if (type === 'a') {\n        if (value < 0) value = 0;\n        if (value > 100) value = 100;\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, a: value / 100 })));\n      }\n      if (value > 255) {\n        value = 255;\n        evn.target.value = '255';\n      }\n      if (value < 0) {\n        value = 0;\n        evn.target.value = '0';\n      }\n      if (type === 'r') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, r: value })));\n      }\n      if (type === 'g') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, g: value })));\n      }\n      if (type === 'b') {\n        onChange && onChange(handleColor(rgbaToHsva({ ...rgba, b: value })));\n      }\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      {...other}\n      style={{\n        fontSize: 11,\n        display: 'flex',\n        ...style,\n      }}\n    >\n      <EditableInput\n        label=\"R\"\n        value={rgba.r || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'r', evn)}\n        {...rProps}\n        style={{ ...rProps.style }}\n      />\n      <EditableInput\n        label=\"G\"\n        value={rgba.g || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'g', evn)}\n        {...gProps}\n        style={{ marginLeft: 5, ...rProps.style }}\n      />\n      <EditableInput\n        label=\"B\"\n        value={rgba.b || 0}\n        onBlur={handleBlur}\n        placement={placement}\n        onChange={(evn, val) => handleChange(val, 'b', evn)}\n        {...bProps}\n        style={{ marginLeft: 5, ...bProps.style }}\n      />\n      {aProps && (\n        <EditableInput\n          label=\"A\"\n          value={rgba.a ? parseInt(String(rgba.a * 100), 10) : 0}\n          onBlur={handleBlur}\n          placement={placement}\n          onChange={(evn, val) => handleChange(val, 'a', evn)}\n          {...aProps}\n          style={{ marginLeft: 5, ...aProps.style }}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInputRGBA.displayName = 'EditableInputRGBA';\n\nexport default EditableInputRGBA;\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\n\nconst validHex = (hex: string): boolean => /^#?([A-Fa-f0-9]{3,4}){1,2}$/.test(hex);\nconst getNumberValue = (value: string) => Number(String(value).replace(/%/g, ''));\n\nexport interface EditableInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  prefixCls?: string;\n  value?: string | number;\n  label?: React.ReactNode;\n  labelStyle?: React.CSSProperties;\n  placement?: 'top' | 'left' | 'bottom' | 'right';\n  inputStyle?: React.CSSProperties;\n  onChange?: (evn: React.ChangeEvent<HTMLInputElement>, value: string | number) => void;\n}\n\nconst EditableInput = React.forwardRef<HTMLInputElement, EditableInputProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-editable-input',\n    placement = 'bottom',\n    label,\n    value: initValue,\n    className,\n    style,\n    labelStyle,\n    inputStyle,\n    onChange,\n    onBlur,\n    ...other\n  } = props;\n  const [value, setValue] = useState<string | number | undefined>(initValue);\n  const isFocus = useRef(false);\n\n  useEffect(() => {\n    if (props.value !== value) {\n      if (!isFocus.current) {\n        setValue(props.value);\n      }\n    }\n  }, [props.value]);\n\n  function handleChange(evn: React.FocusEvent<HTMLInputElement>, valInit?: string) {\n    const value = valInit || evn.target.value;\n    if (validHex(value)) {\n      onChange && onChange(evn, value);\n    }\n    const val = getNumberValue(value);\n    if (!isNaN(val)) {\n      onChange && onChange(evn, val);\n    }\n    setValue(value);\n    // setValueProps(value);\n  }\n  function handleBlur(evn: React.FocusEvent<HTMLInputElement>) {\n    isFocus.current = false;\n    setValue(props.value);\n    onBlur && onBlur(evn);\n  }\n  const placementStyle: React.CSSProperties = {};\n  if (placement === 'bottom') {\n    placementStyle['flexDirection'] = 'column';\n  }\n  if (placement === 'top') {\n    placementStyle['flexDirection'] = 'column-reverse';\n  }\n  if (placement === 'left') {\n    placementStyle['flexDirection'] = 'row-reverse';\n  }\n  return (\n    <div\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{\n        position: 'relative',\n        alignItems: 'center',\n        display: 'flex',\n        fontSize: 11,\n        ...placementStyle,\n        ...style,\n      }}\n    >\n      <input\n        ref={ref}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        autoComplete=\"off\"\n        onFocus={() => (isFocus.current = true)}\n        {...other}\n        style={{\n          width: '100%',\n          paddingTop: 2,\n          paddingBottom: 2,\n          paddingLeft: 3,\n          paddingRight: 3,\n          fontSize: 11,\n          boxSizing: 'border-box',\n          border: 'none',\n          boxShadow: 'rgb(204 204 204) 0px 0px 0px 1px inset',\n          ...inputStyle,\n        }}\n      />\n      {label && (\n        <span\n          style={{\n            color: 'rgb(153, 153, 153)',\n            textTransform: 'capitalize',\n            ...labelStyle,\n          }}\n          children={label}\n        />\n      )}\n    </div>\n  );\n});\n\nEditableInput.displayName = 'EditableInput';\n\nexport default EditableInput;\n","import React from 'react';\nimport { HsvaColor, ColorResult, color as handleColor, validHex, hexToHsva, hsvaToHex } from '@uiw/color-convert';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport RGBA from '@uiw/react-color-editable-input-rgba';\n\nexport interface MaterialProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'color'> {\n  prefixCls?: string;\n  color?: string | HsvaColor;\n  onChange?: (color: ColorResult) => void;\n}\n\nconst styleRBG: React.CSSProperties = {\n  boxShadow: 'initial',\n  borderWidth: '0 0 1px 0',\n  borderBottomColor: '#eee',\n  borderBottomStyle: 'solid',\n  height: 30,\n  outline: 0,\n  fontSize: 15,\n  padding: 0,\n};\n\nconst Material = React.forwardRef<HTMLDivElement, MaterialProps>((props, ref) => {\n  const { prefixCls = 'w-color-material', className, style, color, onChange, ...other } = props;\n  const hsva = (typeof color === 'string' && validHex(color) ? hexToHsva(color) : color) as HsvaColor;\n  const hex = color ? hsvaToHex(hsva).replace(/^#/, '') : '';\n  const handleChange = (hsv: HsvaColor) => {\n    onChange && onChange(handleColor(hsv));\n  };\n  const handleHex = (value: string | number, evn: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof value === 'string' && validHex(value) && /(3|6)/.test(String(value.length))) {\n      onChange && onChange(handleColor(hexToHsva(value)));\n    }\n  };\n  return (\n    <div\n      ref={ref}\n      className={[prefixCls, className || ''].filter(Boolean).join(' ')}\n      style={{ padding: 16, width: 98, fontFamily: 'Roboto', backgroundColor: '#fff', ...style }}\n      {...other}\n    >\n      <EditableInput\n        label=\"Hex\"\n        value={hex.toLocaleUpperCase()}\n        onChange={(evn, val) => handleHex(val, evn)}\n        onBlur={(evn) => {\n          const value = evn.target.value;\n          evn.target.value = value.slice(0, 6);\n          handleHex(value.slice(0, 6), evn);\n        }}\n        inputStyle={{\n          outline: 0,\n          border: 0,\n          height: 30,\n          fontSize: 15,\n          padding: 0,\n          boxShadow: 'initial',\n          borderWidth: '0 0 2px 0',\n          borderBottomColor: hex ? `#${hex}` : '#eee',\n          borderBottomStyle: 'solid',\n        }}\n        style={{ flexDirection: 'column-reverse', alignItems: 'flex-start' }}\n      />\n\n      <RGBA\n        hsva={hsva}\n        placement=\"top\"\n        style={{ marginTop: 11 }}\n        rProps={{\n          style: {\n            alignItems: 'flex-start',\n          },\n          inputStyle: { ...styleRBG },\n        }}\n        gProps={{\n          style: {\n            alignItems: 'flex-start',\n          },\n          inputStyle: { ...styleRBG },\n        }}\n        bProps={{\n          style: {\n            alignItems: 'flex-start',\n          },\n          inputStyle: { ...styleRBG },\n        }}\n        aProps={false}\n        onChange={(result) => handleChange(result.hsva)}\n      />\n    </div>\n  );\n});\n\nMaterial.displayName = 'Material';\n\nexport default Material;\n"],"names":["EditorUrl","editorUrl","className","styles","target","rel","href","Markdown","props","getMdStr","example","state","mdStr","this","then","str","setState","default","source","replace","style","padding","minHeight","src","alt","Component","Example","useContext","Context","hsva","dispatch","width","color","onChange","Page","EditableInputRGBA","React","ref","prefixCls","placement","rProps","gProps","bProps","aProps","other","rgba","hsvaToRgba","handleBlur","evn","value","Number","handleChange","type","handleColor","rgbaToHsva","a","r","g","b","_jsxs","filter","Boolean","join","fontSize","display","children","_jsx","EditableInput","label","onBlur","val","marginLeft","parseInt","String","displayName","initValue","labelStyle","inputStyle","useState","setValue","isFocus","useRef","useEffect","current","placementStyle","position","alignItems","valInit","test","getNumberValue","isNaN","autoComplete","onFocus","paddingTop","paddingBottom","paddingLeft","paddingRight","boxSizing","border","boxShadow","textTransform","styleRBG","borderWidth","borderBottomColor","borderBottomStyle","height","outline","Material","validHex","hexToHsva","hex","hsvaToHex","hsv","handleHex","length","fontFamily","backgroundColor","toLocaleUpperCase","slice","flexDirection","RGBA","marginTop","result"],"sourceRoot":""}